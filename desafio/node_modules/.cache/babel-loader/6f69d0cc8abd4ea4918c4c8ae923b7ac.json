{"ast":null,"code":"/*\n Highcharts JS v10.2.0 (2022-07-05)\n\n Highcharts funnel module\n\n (c) 2010-2021 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (a) {\n  \"object\" === typeof module && module.exports ? (a[\"default\"] = a, module.exports = a) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/funnel\", [\"highcharts\"], function (n) {\n    a(n);\n    a.Highcharts = n;\n    return a;\n  }) : a(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (a) {\n  function n(a, l, f, d) {\n    a.hasOwnProperty(l) || (a[l] = d.apply(null, f), \"function\" === typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: l,\n        module: a[l]\n      }\n    })));\n  }\n\n  a = a ? a._modules : {};\n  n(a, \"Series/Funnel/FunnelSeries.js\", [a[\"Core/Chart/Chart.js\"], a[\"Core/Globals.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, l, f, d) {\n    var n = this && this.__extends || function () {\n      var a = function (b, g) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (g, e) {\n          g.__proto__ = e;\n        } || function (g, e) {\n          for (var a in e) e.hasOwnProperty(a) && (g[a] = e[a]);\n        };\n\n        return a(b, g);\n      };\n\n      return function (b, g) {\n        function D() {\n          this.constructor = b;\n        }\n\n        a(b, g);\n        b.prototype = null === g ? Object.create(g) : (D.prototype = g.prototype, new D());\n      };\n    }(),\n        J = l.noop,\n        y = f.series,\n        c = f.seriesTypes.pie;\n\n    l = d.addEvent;\n    var z = d.extend,\n        L = d.fireEvent,\n        A = d.isArray,\n        B = d.merge,\n        I = d.pick;\n\n    d = function (a) {\n      function b() {\n        var g = null !== a && a.apply(this, arguments) || this;\n        g.data = void 0;\n        g.options = void 0;\n        g.points = void 0;\n        return g;\n      }\n\n      n(b, a);\n\n      b.prototype.alignDataLabel = function (g, a, e, b, k) {\n        var u = g.series;\n        b = u.options.reversed;\n        var h = g.dlBox || g.shapeArgs,\n            d = e.align,\n            c = e.verticalAlign,\n            f = ((u.options || {}).dataLabels || {}).inside,\n            m = u.center[1];\n        u = u.getWidthAt((b ? 2 * m - g.plotY : g.plotY) - h.height / 2 + a.height);\n        u = \"middle\" === c ? (h.topWidth - h.bottomWidth) / 4 : (u - h.bottomWidth) / 2;\n        m = h.y;\n        var p = h.x,\n            D = I(a.height, a.getBBox().height);\n        \"middle\" === c ? m = h.y - h.height / 2 + D / 2 : \"top\" === c && (m = h.y - h.height + D + e.padding);\n        if (\"top\" === c && !b || \"bottom\" === c && b || \"middle\" === c) \"right\" === d ? p = h.x - e.padding + u : \"left\" === d && (p = h.x + e.padding - u);\n        b = {\n          x: p,\n          y: b ? m - h.height : m,\n          width: h.bottomWidth,\n          height: h.height\n        };\n        e.verticalAlign = \"bottom\";\n        f && !g.visible || y.prototype.alignDataLabel.call(this, g, a, e, b, k);\n        f && (!g.visible && g.dataLabel && (g.dataLabel.placed = !1), g.contrastColor && a.css({\n          color: g.contrastColor\n        }));\n      };\n\n      b.prototype.drawDataLabels = function () {\n        var a = this.data,\n            b = this.options.dataLabels.distance,\n            e,\n            c = a.length;\n\n        for (this.center[2] -= 2 * b; c--;) {\n          var k = a[c];\n          var d = (e = k.half) ? 1 : -1;\n          var h = k.plotY;\n          k.labelDistance = I(k.options.dataLabels && k.options.dataLabels.distance, b);\n          this.maxLabelDistance = Math.max(k.labelDistance, this.maxLabelDistance || 0);\n          var y = this.getX(h, e, k);\n          k.labelPosition = {\n            natural: {\n              x: 0,\n              y: h\n            },\n            \"final\": {},\n            alignment: e ? \"right\" : \"left\",\n            connectorPosition: {\n              breakAt: {\n                x: y + (k.labelDistance - 5) * d,\n                y: h\n              },\n              touchingSliceAt: {\n                x: y + k.labelDistance * d,\n                y: h\n              }\n            }\n          };\n        }\n\n        f.seriesTypes[this.options.dataLabels.inside ? \"column\" : \"pie\"].prototype.drawDataLabels.call(this);\n      };\n\n      b.prototype.translate = function () {\n        function a(a, b) {\n          return /%$/.test(a) ? b * parseInt(a, 10) / 100 : parseInt(a, 10);\n        }\n\n        var b = 0,\n            e = this,\n            c = e.chart,\n            k = e.options,\n            d = k.reversed,\n            h = k.ignoreHiddenPoint,\n            f = c.plotWidth;\n        c = c.plotHeight;\n        var y = 0,\n            l = k.center,\n            m = a(l[0], f),\n            p = a(l[1], c),\n            n = a(k.width, f),\n            v,\n            w = a(k.height, c),\n            z = a(k.neckWidth, f),\n            H = a(k.neckHeight, c),\n            A = p - w / 2 + w - H;\n        f = e.data;\n        var B,\n            F,\n            K = \"left\" === k.dataLabels.position ? 1 : 0,\n            E,\n            q,\n            G,\n            x,\n            r,\n            C,\n            t;\n\n        e.getWidthAt = function (a) {\n          var b = p - w / 2;\n          return a > A || w === H ? z : z + (n - z) * (1 - (a - b) / (w - H));\n        };\n\n        e.getX = function (a, b, c) {\n          return m + (b ? -1 : 1) * (e.getWidthAt(d ? 2 * p - a : a) / 2 + c.labelDistance);\n        };\n\n        e.center = [m, p, w];\n        e.centerX = m;\n        f.forEach(function (a) {\n          h && !1 === a.visible || (b += a.y);\n        });\n        f.forEach(function (a) {\n          t = null;\n          F = b ? a.y / b : 0;\n          q = p - w / 2 + y * w;\n          r = q + F * w;\n          v = e.getWidthAt(q);\n          E = m - v / 2;\n          G = E + v;\n          v = e.getWidthAt(r);\n          x = m - v / 2;\n          C = x + v;\n          q > A ? (E = x = m - z / 2, G = C = m + z / 2) : r > A && (t = r, v = e.getWidthAt(A), x = m - v / 2, C = x + v, r = A);\n          d && (q = 2 * p - q, r = 2 * p - r, null !== t && (t = 2 * p - t));\n          B = [[\"M\", E, q], [\"L\", G, q], [\"L\", C, r]];\n          null !== t && B.push([\"L\", C, t], [\"L\", x, t]);\n          B.push([\"L\", x, r], [\"Z\"]);\n          a.shapeType = \"path\";\n          a.shapeArgs = {\n            d: B\n          };\n          a.percentage = 100 * F;\n          a.plotX = m;\n          a.plotY = (q + (t || r)) / 2;\n          a.tooltipPos = [m, a.plotY];\n          a.dlBox = {\n            x: x,\n            y: q,\n            topWidth: G - E,\n            bottomWidth: C - x,\n            height: Math.abs(I(t, r) - q),\n            width: NaN\n          };\n          a.slice = J;\n          a.half = K;\n          h && !1 === a.visible || (y += F);\n        });\n        L(e, \"afterTranslate\");\n      };\n\n      b.prototype.sortByAngle = function (a) {\n        a.sort(function (a, b) {\n          return a.plotY - b.plotY;\n        });\n      };\n\n      b.defaultOptions = B(c.defaultOptions, {\n        animation: !1,\n        center: [\"50%\", \"50%\"],\n        width: \"90%\",\n        neckWidth: \"30%\",\n        height: \"100%\",\n        neckHeight: \"25%\",\n        reversed: !1,\n        size: !0,\n        dataLabels: {\n          connectorWidth: 1,\n          verticalAlign: \"middle\"\n        },\n        states: {\n          select: {\n            color: \"#cccccc\",\n            borderColor: \"#000000\"\n          }\n        }\n      });\n      return b;\n    }(c);\n\n    z(d.prototype, {\n      animate: J\n    });\n    l(a, \"afterHideAllOverlappingLabels\", function () {\n      this.series.forEach(function (a) {\n        var b = a.options && a.options.dataLabels;\n        A(b) && (b = b[0]);\n        a.is(\"pie\") && a.placeDataLabels && b && !b.inside && a.placeDataLabels();\n      });\n    });\n    f.registerSeriesType(\"funnel\", d);\n    \"\";\n    return d;\n  });\n  n(a, \"Series/Pyramid/PyramidSeries.js\", [a[\"Series/Funnel/FunnelSeries.js\"], a[\"Core/Series/SeriesRegistry.js\"], a[\"Core/Utilities.js\"]], function (a, l, f) {\n    var d = this && this.__extends || function () {\n      var a = function (d, c) {\n        a = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (a, c) {\n          a.__proto__ = c;\n        } || function (a, c) {\n          for (var d in c) c.hasOwnProperty(d) && (a[d] = c[d]);\n        };\n\n        return a(d, c);\n      };\n\n      return function (d, c) {\n        function f() {\n          this.constructor = d;\n        }\n\n        a(d, c);\n        d.prototype = null === c ? Object.create(c) : (f.prototype = c.prototype, new f());\n      };\n    }(),\n        n = f.merge;\n\n    f = function (f) {\n      function l() {\n        var a = null !== f && f.apply(this, arguments) || this;\n        a.data = void 0;\n        a.options = void 0;\n        a.points = void 0;\n        return a;\n      }\n\n      d(l, f);\n      l.defaultOptions = n(a.defaultOptions, {\n        neckWidth: \"0%\",\n        neckHeight: \"0%\",\n        reversed: !0\n      });\n      return l;\n    }(a);\n\n    l.registerSeriesType(\"pyramid\", f);\n    \"\";\n    return f;\n  });\n  n(a, \"masters/modules/funnel.src.js\", [], function () {});\n});","map":{"version":3,"mappings":"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","names":["factory","module","define","Highcharts","undefined","_registerModule","obj","path","args","fn","CustomEvent","window","detail","_modules","Chart","H","SeriesRegistry","U","__extends","extendStatics","d","b","Object","__proto__","Array","p","__","noop","Series","PieSeries","addEvent","extend","fireEvent","isArray","merge","pick","FunnelSeries","_super","_this","arguments","FunnelSeries.prototype.alignDataLabel","point","dataLabel","options","alignTo","isNew","series","reversed","dlBox","align","verticalAlign","inside","dataLabels","centerY","widthAtLabel","pointPlotY","offset","y","x","dataLabelHeight","width","height","visible","color","prototype","FunnelSeries.prototype.drawDataLabels","data","labelDistance","distance","leftSide","i","center","maxLabelDistance","Math","getX","natural","alignment","connectorPosition","breakAt","sign","touchingSliceAt","FunnelSeries.prototype.translate","getLength","length","relativeTo","test","parseInt","sum","chart","ignoreHiddenPoint","plotWidth","plotHeight","cumulative","centerX","tempWidth","neckWidth","neckHeight","neckY","fraction","half","x1","y1","x2","x3","y3","x4","y5","series.getWidthAt","top","series.getX","topWidth","bottomWidth","NaN","FunnelSeries.prototype.sortByAngle","points","a","animation","size","connectorWidth","states","select","borderColor","animate","dataLabelsOptions","PyramidSeries"],"sources":["C:\\Users\\Kristhian Figueira\\Desktop\\desafio\\node_modules\\highcharts\\modules\\funnel.src.js"],"sourcesContent":["/**\n * @license Highcharts JS v10.2.0 (2022-07-05)\n *\n * Highcharts funnel module\n *\n * (c) 2010-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/funnel', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Funnel/FunnelSeries.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, H, SeriesRegistry, U) {\n        /* *\n         *\n         *  Highcharts funnel module\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var Series = SeriesRegistry.series,\n            PieSeries = SeriesRegistry.seriesTypes.pie;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            fireEvent = U.fireEvent,\n            isArray = U.isArray,\n            merge = U.merge,\n            pick = U.pick;\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.funnel\n         *\n         * @augments Highcharts.Series\n         */\n        var FunnelSeries = /** @class */ (function (_super) {\n                __extends(FunnelSeries, _super);\n            function FunnelSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            FunnelSeries.prototype.alignDataLabel = function (point, dataLabel, options, alignTo, isNew) {\n                var series = point.series,\n                    reversed = series.options.reversed,\n                    dlBox = point.dlBox || point.shapeArgs,\n                    align = options.align,\n                    verticalAlign = options.verticalAlign,\n                    inside = ((series.options || {}).dataLabels || {}).inside,\n                    centerY = series.center[1],\n                    pointPlotY = (reversed ?\n                        2 * centerY - point.plotY :\n                        point.plotY),\n                    widthAtLabel = series.getWidthAt(pointPlotY - dlBox.height / 2 +\n                        dataLabel.height),\n                    offset = verticalAlign === 'middle' ?\n                        (dlBox.topWidth - dlBox.bottomWidth) / 4 :\n                        (widthAtLabel - dlBox.bottomWidth) / 2,\n                    y = dlBox.y,\n                    x = dlBox.x;\n                // #16176: Only SVGLabel has height set\n                var dataLabelHeight = pick(dataLabel.height,\n                    dataLabel.getBBox().height);\n                if (verticalAlign === 'middle') {\n                    y = dlBox.y - dlBox.height / 2 + dataLabelHeight / 2;\n                }\n                else if (verticalAlign === 'top') {\n                    y = dlBox.y - dlBox.height + dataLabelHeight +\n                        options.padding;\n                }\n                if (verticalAlign === 'top' && !reversed ||\n                    verticalAlign === 'bottom' && reversed ||\n                    verticalAlign === 'middle') {\n                    if (align === 'right') {\n                        x = dlBox.x - options.padding + offset;\n                    }\n                    else if (align === 'left') {\n                        x = dlBox.x + options.padding - offset;\n                    }\n                }\n                alignTo = {\n                    x: x,\n                    y: reversed ? y - dlBox.height : y,\n                    width: dlBox.bottomWidth,\n                    height: dlBox.height\n                };\n                options.verticalAlign = 'bottom';\n                // Call the parent method\n                if (!inside || point.visible) {\n                    Series.prototype.alignDataLabel.call(this, point, dataLabel, options, alignTo, isNew);\n                }\n                if (inside) {\n                    if (!point.visible && point.dataLabel) {\n                        // Avoid animation from top\n                        point.dataLabel.placed = false;\n                    }\n                    // If label is inside and we have contrast, set it:\n                    if (point.contrastColor) {\n                        dataLabel.css({\n                            color: point.contrastColor\n                        });\n                    }\n                }\n            };\n            /**\n             * Extend the pie data label method.\n             * @private\n             */\n            FunnelSeries.prototype.drawDataLabels = function () {\n                var series = this,\n                    data = series.data,\n                    labelDistance = series.options.dataLabels.distance,\n                    leftSide,\n                    sign,\n                    point,\n                    i = data.length,\n                    x,\n                    y;\n                // In the original pie label anticollision logic, the slots are\n                // distributed from one labelDistance above to one labelDistance\n                // below the pie. In funnels we don't want this.\n                series.center[2] -= 2 * labelDistance;\n                // Set the label position array for each point.\n                while (i--) {\n                    point = data[i];\n                    leftSide = point.half;\n                    sign = leftSide ? 1 : -1;\n                    y = point.plotY;\n                    point.labelDistance = pick(point.options.dataLabels &&\n                        point.options.dataLabels.distance, labelDistance);\n                    series.maxLabelDistance = Math.max(point.labelDistance, series.maxLabelDistance || 0);\n                    x = series.getX(y, leftSide, point);\n                    // set the anchor point for data labels\n                    point.labelPosition = {\n                        // initial position of the data label - it's utilized for\n                        // finding the final position for the label\n                        natural: {\n                            x: 0,\n                            y: y\n                        },\n                        'final': {\n                        // used for generating connector path -\n                        // initialized later in drawDataLabels function\n                        // x: undefined,\n                        // y: undefined\n                        },\n                        // left - funnel on the left side of the data label\n                        // right - funnel on the right side of the data label\n                        alignment: leftSide ? 'right' : 'left',\n                        connectorPosition: {\n                            breakAt: {\n                                x: x + (point.labelDistance - 5) * sign,\n                                y: y\n                            },\n                            touchingSliceAt: {\n                                x: x + point.labelDistance * sign,\n                                y: y\n                            }\n                        }\n                    };\n                }\n                SeriesRegistry.seriesTypes[series.options.dataLabels.inside ? 'column' : 'pie'].prototype.drawDataLabels.call(this);\n            };\n            /**\n             * Overrides the pie translate method.\n             * @private\n             */\n            FunnelSeries.prototype.translate = function () {\n                var sum = 0,\n                    series = this,\n                    chart = series.chart,\n                    options = series.options,\n                    reversed = options.reversed,\n                    ignoreHiddenPoint = options.ignoreHiddenPoint,\n                    plotWidth = chart.plotWidth,\n                    plotHeight = chart.plotHeight,\n                    cumulative = 0, // start at top\n                    center = options.center,\n                    centerX = getLength(center[0],\n                    plotWidth),\n                    centerY = getLength(center[1],\n                    plotHeight),\n                    width = getLength(options.width,\n                    plotWidth),\n                    tempWidth,\n                    height = getLength(options.height,\n                    plotHeight),\n                    neckWidth = getLength(options.neckWidth,\n                    plotWidth),\n                    neckHeight = getLength(options.neckHeight,\n                    plotHeight),\n                    neckY = (centerY - height / 2) + height - neckHeight,\n                    data = series.data,\n                    path,\n                    fraction,\n                    half = (options.dataLabels.position === 'left' ?\n                        1 :\n                        0),\n                    x1,\n                    y1,\n                    x2,\n                    x3,\n                    y3,\n                    x4,\n                    y5;\n                /**\n                 * Get positions - either an integer or a percentage string must be\n                 * given.\n                 * @private\n                 * @param {number|string|undefined} length\n                 *        Length\n                 * @param {number} relativeTo\n                 *        Relative factor\n                 * @return {number}\n                 *         Relative position\n                 */\n                function getLength(length, relativeTo) {\n                    return (/%$/).test(length) ?\n                        relativeTo * parseInt(length, 10) / 100 :\n                        parseInt(length, 10);\n                }\n                series.getWidthAt = function (y) {\n                    var top = (centerY - height / 2);\n                    return (y > neckY || height === neckHeight) ?\n                        neckWidth :\n                        neckWidth + (width - neckWidth) *\n                            (1 - (y - top) / (height - neckHeight));\n                };\n                series.getX = function (y, half, point) {\n                    return centerX + (half ? -1 : 1) *\n                        ((series.getWidthAt(reversed ? 2 * centerY - y : y) / 2) +\n                            point.labelDistance);\n                };\n                // Expose\n                series.center = [centerX, centerY, height];\n                series.centerX = centerX;\n                /*\n                Individual point coordinate naming:\n\n                x1,y1 _________________ x2,y1\n                    \\                         /\n                    \\                       /\n                    \\                     /\n                    \\                   /\n                        \\                 /\n                    x3,y3 _________ x4,y3\n\n                Additional for the base of the neck:\n\n                        |               |\n                        |               |\n                        |               |\n                    x3,y5 _________ x4,y5\n\n                */\n                // get the total sum\n                data.forEach(function (point) {\n                    if (!ignoreHiddenPoint || point.visible !== false) {\n                        sum += point.y;\n                    }\n                });\n                data.forEach(function (point) {\n                    // set start and end positions\n                    y5 = null;\n                    fraction = sum ? point.y / sum : 0;\n                    y1 = centerY - height / 2 + cumulative * height;\n                    y3 = y1 + fraction * height;\n                    tempWidth = series.getWidthAt(y1);\n                    x1 = centerX - tempWidth / 2;\n                    x2 = x1 + tempWidth;\n                    tempWidth = series.getWidthAt(y3);\n                    x3 = centerX - tempWidth / 2;\n                    x4 = x3 + tempWidth;\n                    // the entire point is within the neck\n                    if (y1 > neckY) {\n                        x1 = x3 = centerX - neckWidth / 2;\n                        x2 = x4 = centerX + neckWidth / 2;\n                        // the base of the neck\n                    }\n                    else if (y3 > neckY) {\n                        y5 = y3;\n                        tempWidth = series.getWidthAt(neckY);\n                        x3 = centerX - tempWidth / 2;\n                        x4 = x3 + tempWidth;\n                        y3 = neckY;\n                    }\n                    if (reversed) {\n                        y1 = 2 * centerY - y1;\n                        y3 = 2 * centerY - y3;\n                        if (y5 !== null) {\n                            y5 = 2 * centerY - y5;\n                        }\n                    }\n                    // save the path\n                    path = [\n                        ['M', x1, y1],\n                        ['L', x2, y1],\n                        ['L', x4, y3]\n                    ];\n                    if (y5 !== null) {\n                        path.push(['L', x4, y5], ['L', x3, y5]);\n                    }\n                    path.push(['L', x3, y3], ['Z']);\n                    // prepare for using shared dr\n                    point.shapeType = 'path';\n                    point.shapeArgs = { d: path };\n                    // for tooltips and data labels\n                    point.percentage = fraction * 100;\n                    point.plotX = centerX;\n                    point.plotY = (y1 + (y5 || y3)) / 2;\n                    // Placement of tooltips and data labels\n                    point.tooltipPos = [\n                        centerX,\n                        point.plotY\n                    ];\n                    point.dlBox = {\n                        x: x3,\n                        y: y1,\n                        topWidth: x2 - x1,\n                        bottomWidth: x4 - x3,\n                        height: Math.abs(pick(y5, y3) - y1),\n                        width: NaN\n                    };\n                    // Slice is a noop on funnel points\n                    point.slice = noop;\n                    // Mimicking pie data label placement logic\n                    point.half = half;\n                    if (!ignoreHiddenPoint || point.visible !== false) {\n                        cumulative += fraction;\n                    }\n                });\n                fireEvent(series, 'afterTranslate');\n            };\n            /**\n             * Funnel items don't have angles (#2289).\n             * @private\n             */\n            FunnelSeries.prototype.sortByAngle = function (points) {\n                points.sort(function (a, b) {\n                    return a.plotY - b.plotY;\n                });\n            };\n            /**\n             * Funnel charts are a type of chart often used to visualize stages in a\n             * sales project, where the top are the initial stages with the most\n             * clients. It requires that the modules/funnel.js file is loaded.\n             *\n             * @sample highcharts/demo/funnel/\n             *         Funnel demo\n             *\n             * @extends      plotOptions.pie\n             * @excluding    innerSize,size,dataSorting\n             * @product      highcharts\n             * @requires     modules/funnel\n             * @optionparent plotOptions.funnel\n             */\n            FunnelSeries.defaultOptions = merge(PieSeries.defaultOptions, {\n                /**\n                 * Initial animation is by default disabled for the funnel chart.\n                 */\n                animation: false,\n                /**\n                 * The center of the series. By default, it is centered in the middle\n                 * of the plot area, so it fills the plot area height.\n                 *\n                 * @type    {Array<number|string>}\n                 * @default [\"50%\", \"50%\"]\n                 * @since   3.0\n                 */\n                center: ['50%', '50%'],\n                /**\n                 * The width of the funnel compared to the width of the plot area,\n                 * or the pixel width if it is a number.\n                 *\n                 * @type  {number|string}\n                 * @since 3.0\n                 */\n                width: '90%',\n                /**\n                 * The width of the neck, the lower part of the funnel. A number defines\n                 * pixel width, a percentage string defines a percentage of the plot\n                 * area width.\n                 *\n                 * @sample {highcharts} highcharts/demo/funnel/\n                 *         Funnel demo\n                 *\n                 * @type  {number|string}\n                 * @since 3.0\n                 */\n                neckWidth: '30%',\n                /**\n                 * The height of the funnel or pyramid. If it is a number it defines\n                 * the pixel height, if it is a percentage string it is the percentage\n                 * of the plot area height.\n                 *\n                 * @sample {highcharts} highcharts/demo/funnel/\n                 *         Funnel demo\n                 *\n                 * @type  {number|string}\n                 * @since 3.0\n                 */\n                height: '100%',\n                /**\n                 * The height of the neck, the lower part of the funnel. A number\n                 * defines pixel width, a percentage string defines a percentage of the\n                 * plot area height.\n                 *\n                 * @type {number|string}\n                 */\n                neckHeight: '25%',\n                /**\n                 * A reversed funnel has the widest area down. A reversed funnel with\n                 * no neck width and neck height is a pyramid.\n                 *\n                 * @since 3.0.10\n                 */\n                reversed: false,\n                /**\n                 * To avoid adapting the data label size in Pie.drawDataLabels.\n                 * @ignore-option\n                 */\n                size: true,\n                dataLabels: {\n                    connectorWidth: 1,\n                    verticalAlign: 'middle'\n                },\n                /**\n                 * Options for the series states.\n                 */\n                states: {\n                    /**\n                     * @excluding halo, marker, lineWidth, lineWidthPlus\n                     * @apioption plotOptions.funnel.states.hover\n                     */\n                    /**\n                     * Options for a selected funnel item.\n                     *\n                     * @excluding halo, marker, lineWidth, lineWidthPlus\n                     */\n                    select: {\n                        /**\n                         * A specific color for the selected point.\n                         *\n                         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                         */\n                        color: \"#cccccc\" /* Palette.neutralColor20 */,\n                        /**\n                         * A specific border color for the selected point.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        borderColor: \"#000000\" /* Palette.neutralColor100 */\n                    }\n                }\n            });\n            return FunnelSeries;\n        }(PieSeries));\n        extend(FunnelSeries.prototype, {\n            animate: noop\n        });\n        /* *\n         *\n         *  Hack\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        addEvent(Chart, 'afterHideAllOverlappingLabels', function () {\n            this.series.forEach(function (series) {\n                var dataLabelsOptions = series.options && series.options.dataLabels;\n                if (isArray(dataLabelsOptions)) {\n                    dataLabelsOptions = dataLabelsOptions[0];\n                }\n                if (series.is('pie') &&\n                    series.placeDataLabels &&\n                    dataLabelsOptions &&\n                    !dataLabelsOptions.inside) {\n                    series.placeDataLabels();\n                }\n            });\n        });\n        SeriesRegistry.registerSeriesType('funnel', FunnelSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `funnel` series. If the [type](#series.funnel.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.funnel\n         * @excluding dataParser, dataURL, stack, xAxis, yAxis, dataSorting,\n         *            boostBlending, boostThreshold\n         * @product   highcharts\n         * @requires  modules/funnel\n         * @apioption series.funnel\n         */\n        /**\n         * An array of data points for the series. For the `funnel` series type,\n         * points can be given in the following ways:\n         *\n         * 1.  An array of numerical values. In this case, the numerical values\n         * will be interpreted as `y` options. Example:\n         *\n         *  ```js\n         *  data: [0, 5, 3, 5]\n         *  ```\n         *\n         * 2.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.funnel.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         y: 3,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         y: 1,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|null|*>}\n         * @extends   series.pie.data\n         * @excluding sliced\n         * @product   highcharts\n         * @apioption series.funnel.data\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return FunnelSeries;\n    });\n    _registerModule(_modules, 'Series/Pyramid/PyramidSeries.js', [_modules['Series/Funnel/FunnelSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (FunnelSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  Highcharts funnel module\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Pyramid series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pyramid\n         *\n         * @augments Highcharts.Series\n         */\n        var PyramidSeries = /** @class */ (function (_super) {\n                __extends(PyramidSeries, _super);\n            function PyramidSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /**\n             * A pyramid series is a special type of funnel, without neck and reversed\n             * by default.\n             *\n             * @sample highcharts/demo/pyramid/\n             *         Pyramid chart\n             *\n             * @extends      plotOptions.funnel\n             * @product      highcharts\n             * @requires     modules/funnel\n             * @optionparent plotOptions.pyramid\n             */\n            PyramidSeries.defaultOptions = merge(FunnelSeries.defaultOptions, {\n                /**\n                 * The pyramid neck width is zero by default, as opposed to the funnel,\n                 * which shares the same layout logic.\n                 *\n                 * @since 3.0.10\n                 */\n                neckWidth: '0%',\n                /**\n                 * The pyramid neck width is zero by default, as opposed to the funnel,\n                 * which shares the same layout logic.\n                 *\n                 * @since 3.0.10\n                 */\n                neckHeight: '0%',\n                /**\n                 * The pyramid is reversed by default, as opposed to the funnel, which\n                 * shares the layout engine, and is not reversed.\n                 *\n                 * @since 3.0.10\n                 */\n                reversed: true\n            });\n            return PyramidSeries;\n        }(FunnelSeries));\n        SeriesRegistry.registerSeriesType('pyramid', PyramidSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `pyramid` series. If the [type](#series.pyramid.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pyramid\n         * @excluding dataParser, dataURL, stack, xAxis, yAxis, dataSorting,\n         *            boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  modules/funnel\n         * @apioption series.pyramid\n         */\n        /**\n         * An array of data points for the series. For the `pyramid` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of numerical values. In this case, the numerical values will be\n         *    interpreted as `y` options. Example:\n         *    ```js\n         *    data: [0, 5, 3, 5]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.pyramid.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        y: 9,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        y: 6,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|null|*>}\n         * @extends   series.pie.data\n         * @excluding sliced\n         * @product   highcharts\n         * @apioption series.pyramid.data\n         */\n        ''; // adds doclets above into transpiled file\n\n        return PyramidSeries;\n    });\n    _registerModule(_modules, 'masters/modules/funnel.src.js', [], function () {\n\n\n    });\n}));"]},"metadata":{},"sourceType":"script"}